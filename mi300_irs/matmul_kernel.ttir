#loc = loc("/triton/python/test/unit/language/test_core.py":5124:0)
module {
  tt.func public @matmul_kernel(%arg0: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg1: !tt.ptr<f8E5M2> {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/triton/python/test/unit/language/test_core.py":5124:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128x256xf32> loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<128x128xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg3, %c127_i32 : i32 loc(#loc42)
    %2 = arith.divsi %1, %c128_i32 : i32 loc(#loc43)
    %3 = arith.remsi %0, %2 : i32 loc(#loc6)
    %4 = arith.divsi %0, %2 : i32 loc(#loc7)
    %5 = arith.muli %3, %c128_i32 : i32 loc(#loc8)
    %6 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc9)
    %7 = tt.splat %5 : i32 -> tensor<128xi32> loc(#loc10)
    %8 = arith.addi %7, %6 : tensor<128xi32> loc(#loc10)
    %9 = tt.splat %arg3 : i32 -> tensor<128xi32> loc(#loc11)
    %10 = arith.remsi %8, %9 : tensor<128xi32> loc(#loc11)
    %11 = arith.muli %4, %c256_i32 : i32 loc(#loc12)
    %12 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc13)
    %13 = tt.splat %11 : i32 -> tensor<256xi32> loc(#loc14)
    %14 = arith.addi %13, %12 : tensor<256xi32> loc(#loc14)
    %15 = tt.splat %arg4 : i32 -> tensor<256xi32> loc(#loc15)
    %16 = arith.remsi %14, %15 : tensor<256xi32> loc(#loc15)
    %17 = tt.expand_dims %10 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc16)
    %18 = tt.splat %arg6 : i32 -> tensor<128x1xi32> loc(#loc17)
    %19 = arith.muli %17, %18 : tensor<128x1xi32> loc(#loc17)
    %20 = tt.expand_dims %6 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc18)
    %21 = tt.broadcast %19 : tensor<128x1xi32> -> tensor<128x128xi32> loc(#loc19)
    %22 = tt.broadcast %20 : tensor<1x128xi32> -> tensor<128x128xi32> loc(#loc19)
    %23 = arith.addi %21, %22 : tensor<128x128xi32> loc(#loc19)
    %24 = tt.splat %arg0 : !tt.ptr<f8E5M2> -> tensor<128x128x!tt.ptr<f8E5M2>> loc(#loc20)
    %25 = tt.addptr %24, %23 : tensor<128x128x!tt.ptr<f8E5M2>>, tensor<128x128xi32> loc(#loc20)
    %26 = tt.expand_dims %6 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc21)
    %27 = tt.splat %arg7 : i32 -> tensor<128x1xi32> loc(#loc22)
    %28 = arith.muli %26, %27 : tensor<128x1xi32> loc(#loc22)
    %29 = tt.expand_dims %16 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc23)
    %30 = tt.broadcast %28 : tensor<128x1xi32> -> tensor<128x256xi32> loc(#loc24)
    %31 = tt.broadcast %29 : tensor<1x256xi32> -> tensor<128x256xi32> loc(#loc24)
    %32 = arith.addi %30, %31 : tensor<128x256xi32> loc(#loc24)
    %33 = tt.splat %arg1 : !tt.ptr<f8E5M2> -> tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc25)
    %34 = tt.addptr %33, %32 : tensor<128x256x!tt.ptr<f8E5M2>>, tensor<128x256xi32> loc(#loc25)
    %35 = arith.addi %arg5, %c127_i32 : i32 loc(#loc44)
    %36 = arith.divsi %35, %c128_i32 : i32 loc(#loc45)
    %37 = arith.muli %arg7, %c128_i32 : i32 loc(#loc27)
    %38 = tt.splat %37 : i32 -> tensor<128x256xi32> loc(#loc28)
    %39:3 = scf.for %arg9 = %c0_i32 to %36 step %c1_i32 iter_args(%arg10 = %cst, %arg11 = %25, %arg12 = %34) -> (tensor<128x256xf32>, tensor<128x128x!tt.ptr<f8E5M2>>, tensor<128x256x!tt.ptr<f8E5M2>>)  : i32 {
      %49 = tt.load %arg11 : tensor<128x128x!tt.ptr<f8E5M2>> loc(#loc30)
      %50 = tt.load %arg12 : tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc31)
      %51 = tt.dot %49, %50, %arg10 : tensor<128x128xf8E5M2> * tensor<128x256xf8E5M2> -> tensor<128x256xf32> loc(#loc32)
      %52 = tt.addptr %arg11, %cst_0 : tensor<128x128x!tt.ptr<f8E5M2>>, tensor<128x128xi32> loc(#loc33)
      %53 = tt.addptr %arg12, %38 : tensor<128x256x!tt.ptr<f8E5M2>>, tensor<128x256xi32> loc(#loc28)
      scf.yield %51, %52, %53 : tensor<128x256xf32>, tensor<128x128x!tt.ptr<f8E5M2>>, tensor<128x256x!tt.ptr<f8E5M2>> loc(#loc34)
    } {tt.num_stages = 3 : i32} loc(#loc29)
    %40 = tt.expand_dims %8 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc35)
    %41 = tt.splat %arg8 : i32 -> tensor<128x1xi32> loc(#loc36)
    %42 = arith.muli %41, %40 : tensor<128x1xi32> loc(#loc36)
    %43 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc37)
    %44 = tt.addptr %43, %42 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc37)
    %45 = tt.expand_dims %14 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc38)
    %46 = tt.broadcast %44 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x256x!tt.ptr<f32>> loc(#loc39)
    %47 = tt.broadcast %45 : tensor<1x256xi32> -> tensor<128x256xi32> loc(#loc39)
    %48 = tt.addptr %46, %47 : tensor<128x256x!tt.ptr<f32>>, tensor<128x256xi32> loc(#loc39)
    tt.store %48, %39#0 : tensor<128x256x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/triton/python/test/unit/language/test_core.py":5134:24)
#loc3 = loc("/triton/python/triton/language/standard.py":40:22)
#loc4 = loc("/triton/python/test/unit/language/test_core.py":5135:27)
#loc5 = loc("/triton/python/triton/language/standard.py":40:28)
#loc6 = loc("/triton/python/test/unit/language/test_core.py":5136:18)
#loc7 = loc("/triton/python/test/unit/language/test_core.py":5137:19)
#loc8 = loc("/triton/python/test/unit/language/test_core.py":5138:23)
#loc9 = loc("/triton/python/test/unit/language/test_core.py":5138:51)
#loc10 = loc("/triton/python/test/unit/language/test_core.py":5138:38)
#loc11 = loc("/triton/python/test/unit/language/test_core.py":5138:68)
#loc12 = loc("/triton/python/test/unit/language/test_core.py":5139:23)
#loc13 = loc("/triton/python/test/unit/language/test_core.py":5139:51)
#loc14 = loc("/triton/python/test/unit/language/test_core.py":5139:38)
#loc15 = loc("/triton/python/test/unit/language/test_core.py":5139:68)
#loc16 = loc("/triton/python/test/unit/language/test_core.py":5141:30)
#loc17 = loc("/triton/python/test/unit/language/test_core.py":5141:41)
#loc18 = loc("/triton/python/test/unit/language/test_core.py":5141:60)
#loc19 = loc("/triton/python/test/unit/language/test_core.py":5141:53)
#loc20 = loc("/triton/python/test/unit/language/test_core.py":5141:22)
#loc21 = loc("/triton/python/test/unit/language/test_core.py":5142:29)
#loc22 = loc("/triton/python/test/unit/language/test_core.py":5142:40)
#loc23 = loc("/triton/python/test/unit/language/test_core.py":5142:60)
#loc24 = loc("/triton/python/test/unit/language/test_core.py":5142:52)
#loc25 = loc("/triton/python/test/unit/language/test_core.py":5142:22)
#loc26 = loc("/triton/python/test/unit/language/test_core.py":5144:36)
#loc27 = loc("/triton/python/test/unit/language/test_core.py":5149:33)
#loc28 = loc("/triton/python/test/unit/language/test_core.py":5149:18)
#loc29 = loc("/triton/python/test/unit/language/test_core.py":5144:51)
#loc30 = loc("/triton/python/test/unit/language/test_core.py":5145:20)
#loc31 = loc("/triton/python/test/unit/language/test_core.py":5146:20)
#loc32 = loc("/triton/python/test/unit/language/test_core.py":5147:32)
#loc33 = loc("/triton/python/test/unit/language/test_core.py":5148:18)
#loc34 = loc("/triton/python/test/unit/language/test_core.py":5149:8)
#loc35 = loc("/triton/python/test/unit/language/test_core.py":5152:41)
#loc36 = loc("/triton/python/test/unit/language/test_core.py":5152:33)
#loc37 = loc("/triton/python/test/unit/language/test_core.py":5152:21)
#loc38 = loc("/triton/python/test/unit/language/test_core.py":5152:72)
#loc39 = loc("/triton/python/test/unit/language/test_core.py":5152:52)
#loc40 = loc("/triton/python/test/unit/language/test_core.py":5153:21)
#loc41 = loc("/triton/python/test/unit/language/test_core.py":5153:4)
#loc42 = loc(callsite(#loc3 at #loc4))
#loc43 = loc(callsite(#loc5 at #loc4))
#loc44 = loc(callsite(#loc3 at #loc26))
#loc45 = loc(callsite(#loc5 at #loc26))
