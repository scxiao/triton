	.text
	.amdgcn_target "amdgcn-amd-amdhsa--gfx942"
	.amdhsa_code_object_version 4
	.globl	_triton_gemm_a8w8_kernel
	.p2align	8
	.type	_triton_gemm_a8w8_kernel,@function
_triton_gemm_a8w8_kernel:
.Lfunc_begin0:
	.cfi_sections .debug_frame
	.cfi_startproc
	.file	1 "/workspace/projects/triton-openai/python/test" "_test_a8w8_7.py"
	.loc	1 123 24 prologue_end
	s_load_dwordx4 s[12:15], s[0:1], 0x20
	s_load_dwordx2 s[16:17], s[0:1], 0x34
	.loc	1 127 22
	s_abs_i32 s18, s2
	.loc	1 138 40
	v_and_b32_e32 v23, 63, v0
	v_mov_b32_e32 v6, 0
.Ltmp0:
	.file	2 "/opt/conda/envs/py_3.9/lib/python3.9/site-packages/triton/language" "standard.py"
	.loc	2 40 22
	s_waitcnt lgkmcnt(0)
	s_add_i32 s3, s14, 63
	.loc	2 40 28 is_stmt 0
	s_ashr_i32 s4, s3, 31
	s_lshr_b32 s4, s4, 26
	s_add_i32 s3, s3, s4
	s_ashr_i32 s21, s3, 6
.Ltmp1:
	.loc	1 127 22 is_stmt 1
	s_abs_i32 s4, s21
	v_cvt_f32_u32_e32 v1, s4
	s_sub_i32 s6, 0, s4
	s_ashr_i32 s3, s2, 31
	s_ashr_i32 s5, s21, 31
	v_rcp_iflag_f32_e32 v1, v1
	s_xor_b32 s5, s3, s5
	v_mov_b32_e32 v7, 0
	v_mov_b32_e32 v8, 0
	v_mul_f32_e32 v1, 0x4f7ffffe, v1
	v_cvt_u32_f32_e32 v1, v1
	v_mov_b32_e32 v9, 0
	v_mov_b32_e32 v10, 0
	v_mov_b32_e32 v11, 0
	v_readfirstlane_b32 s7, v1
	s_mul_i32 s6, s6, s7
	s_mul_hi_u32 s6, s7, s6
	s_add_i32 s7, s7, s6
	s_mul_hi_u32 s6, s18, s7
	s_mul_i32 s7, s6, s4
	s_sub_i32 s7, s18, s7
	s_add_i32 s8, s6, 1
	s_sub_i32 s9, s7, s4
	s_cmp_ge_u32 s7, s4
	s_cselect_b32 s6, s8, s6
	s_cselect_b32 s7, s9, s7
	s_add_i32 s8, s6, 1
	s_cmp_ge_u32 s7, s4
	s_cselect_b32 s4, s8, s6
	s_xor_b32 s4, s4, s5
	s_sub_i32 s19, s4, s5
	.loc	1 129 35
	s_sub_i32 s4, 1, s19
	.loc	1 129 48 is_stmt 0
	s_min_i32 s22, s4, 1
	.loc	1 130 33 is_stmt 1
	s_abs_i32 s20, s22
	v_cvt_f32_u32_e32 v2, s20
	.loc	1 123 24
	s_load_dwordx8 s[4:11], s[0:1], 0x0
	.loc	1 131 19
	s_mul_i32 s0, s19, s21
	s_sub_i32 s0, s2, s0
	.loc	1 130 33
	v_rcp_iflag_f32_e32 v2, v2
	s_sub_i32 s2, 0, s20
	.loc	1 131 40
	s_xor_b32 s1, s0, s22
	s_abs_i32 s0, s0
	.loc	1 130 33
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	.loc	1 131 40
	s_ashr_i32 s1, s1, 31
	.loc	1 138 40
	v_and_b32_e32 v1, 64, v0
	v_lshrrev_b32_e32 v22, 4, v1
	.loc	1 130 33
	v_readfirstlane_b32 s21, v2
	s_mul_i32 s2, s2, s21
	s_mul_hi_u32 s2, s21, s2
	s_add_i32 s21, s21, s2
	s_mul_hi_u32 s2, s18, s21
	.loc	1 131 40
	s_mul_hi_u32 s21, s0, s21
	s_mul_i32 s22, s21, s20
	s_sub_i32 s0, s0, s22
	s_add_i32 s23, s21, 1
	s_sub_i32 s22, s0, s20
	s_cmp_ge_u32 s0, s20
	s_cselect_b32 s21, s23, s21
	s_cselect_b32 s0, s22, s0
	s_add_i32 s22, s21, 1
	s_cmp_ge_u32 s0, s20
	s_cselect_b32 s0, s22, s21
	s_xor_b32 s0, s0, s1
	s_sub_i32 s0, s0, s1
	.loc	1 138 17
	s_lshl_b32 s21, s0, 6
.Ltmp2:
	.loc	2 40 22
	s_add_i32 s0, s15, 0xff
	s_mov_b32 s15, 0
.Ltmp3:
	.loc	1 153 22
	s_cmpk_lt_i32 s0, 0x100
	v_mov_b32_e32 v12, 0
	v_mov_b32_e32 v13, 0
	s_cbranch_scc1 .LBB0_4
	.loc	1 140 48
	s_abs_i32 s23, s14
	v_cvt_f32_u32_e32 v2, s23
.Ltmp4:
	.loc	2 40 28
	s_ashr_i32 s1, s0, 31
	s_lshr_b32 s1, s1, 24
.Ltmp5:
	.loc	1 138 40
	v_lshrrev_b32_e32 v24, 4, v0
	.loc	1 140 48
	v_rcp_iflag_f32_e32 v2, v2
.Ltmp6:
	.loc	2 40 28
	s_add_i32 s0, s0, s1
.Ltmp7:
	.loc	1 138 40
	v_and_or_b32 v25, v24, 3, v22
.Ltmp8:
	.loc	2 40 28
	s_ashr_i32 s22, s0, 8
.Ltmp9:
	.loc	1 140 48
	v_mul_f32_e32 v2, 0x4f7ffffe, v2
	v_cvt_u32_f32_e32 v2, v2
	.loc	1 138 40
	v_or_b32_e32 v3, s21, v25
	.loc	1 140 48
	s_ashr_i32 s24, s21, 31
	s_sub_i32 s0, 0, s23
	v_add_u32_e32 v16, s24, v3
	v_mul_lo_u32 v4, s0, v2
	v_add_u32_e32 v3, 56, v16
	v_mul_hi_u32 v4, v2, v4
	v_xor_b32_e32 v3, s24, v3
	v_add_u32_e32 v17, v2, v4
	v_mul_hi_u32 v2, v3, v17
	v_mul_lo_u32 v2, v2, s23
	v_add_u32_e32 v4, 48, v16
	v_sub_u32_e32 v2, v3, v2
	v_xor_b32_e32 v4, s24, v4
	v_subrev_u32_e32 v3, s23, v2
	v_cmp_le_u32_e32 vcc, s23, v2
	v_mul_hi_u32 v5, v4, v17
	v_mul_lo_u32 v5, v5, s23
	v_cndmask_b32_e32 v2, v2, v3, vcc
	v_add_u32_e32 v6, 40, v16
	v_subrev_u32_e32 v3, s23, v2
	v_cmp_le_u32_e32 vcc, s23, v2
	v_sub_u32_e32 v4, v4, v5
	v_xor_b32_e32 v6, s24, v6
	v_cndmask_b32_e32 v2, v2, v3, vcc
	v_subrev_u32_e32 v5, s23, v4
	v_cmp_le_u32_e32 vcc, s23, v4
	v_mul_hi_u32 v7, v6, v17
	.loc	1 142 48
	v_lshlrev_b32_e32 v26, 4, v0
	.loc	1 140 48
	v_cndmask_b32_e32 v4, v4, v5, vcc
	v_mul_lo_u32 v7, v7, s23
	v_add_u32_e32 v8, 32, v16
	v_lshrrev_b32_e32 v31, 2, v0
	v_lshlrev_b32_e32 v41, 1, v23
	.loc	1 142 48
	v_and_b32_e32 v20, 0xf0, v26
	.loc	1 140 48
	v_subrev_u32_e32 v5, s23, v4
	v_cmp_le_u32_e32 vcc, s23, v4
	v_sub_u32_e32 v6, v6, v7
	v_xor_b32_e32 v8, s24, v8
	v_and_b32_e32 v32, 4, v31
	v_and_b32_e32 v40, 3, v0
	v_and_b32_e32 v41, 0x78, v41
	v_cndmask_b32_e32 v4, v4, v5, vcc
	v_subrev_u32_e32 v7, s23, v6
	v_cmp_le_u32_e32 vcc, s23, v6
	v_mul_hi_u32 v9, v8, v17
	v_or_b32_e32 v33, v20, v32
	v_and_b32_e32 v34, 8, v31
	v_or_b32_e32 v37, 4, v20
	v_and_or_b32 v24, v24, 4, v40
	v_or_b32_e32 v42, 4, v41
	v_or_b32_e32 v43, 0x80, v41
	v_or_b32_e32 v44, 0x84, v41
	v_lshlrev_b32_e32 v40, 2, v40
	v_cndmask_b32_e32 v6, v6, v7, vcc
	v_mul_lo_u32 v9, v9, s23
	v_add_u32_e32 v10, 24, v16
	v_or_b32_e32 v35, v33, v34
	v_xor_b32_e32 v37, v37, v32
	v_xor_b32_e32 v41, v41, v40
	v_lshlrev_b32_e32 v24, 8, v24
	v_xor_b32_e32 v42, v42, v40
	v_xor_b32_e32 v43, v43, v40
	v_xor_b32_e32 v40, v44, v40
	v_lshrrev_b32_e32 v1, 2, v1
	v_subrev_u32_e32 v7, s23, v6
	v_cmp_le_u32_e32 vcc, s23, v6
	v_sub_u32_e32 v8, v8, v9
	v_xor_b32_e32 v10, s24, v10
	v_lshlrev_b32_e32 v25, 8, v25
	v_or_b32_e32 v37, v37, v34
	v_or_b32_e32 v33, 8, v33
	v_or_b32_e32 v41, v24, v41
	v_or_b32_e32 v42, v42, v24
	v_or_b32_e32 v43, v43, v24
	v_or_b32_e32 v40, v40, v24
	v_xor_b32_e32 v24, v35, v1
	v_cndmask_b32_e32 v6, v6, v7, vcc
	v_subrev_u32_e32 v9, s23, v8
	v_cmp_le_u32_e32 vcc, s23, v8
	v_mul_hi_u32 v11, v10, v17
	v_or_b32_e32 v36, v35, v25
	v_xor_b32_e32 v33, v33, v34
	v_or_b32_e32 v35, v24, v25
	v_xor_b32_e32 v24, v37, v1
	v_cndmask_b32_e32 v8, v8, v9, vcc
	v_mul_lo_u32 v11, v11, s23
	v_add_u32_e32 v12, 16, v16
	.loc	1 142 48
	v_and_b32_e32 v30, 16, v26
	v_or_b32_e32 v38, v37, v25
	v_or_b32_e32 v37, v24, v25
	v_xor_b32_e32 v24, v33, v1
	.loc	1 140 48
	v_subrev_u32_e32 v9, s23, v8
	v_cmp_le_u32_e32 vcc, s23, v8
	v_sub_u32_e32 v10, v10, v11
	v_xor_b32_e32 v12, s24, v12
	.loc	1 142 48
	v_and_b32_e32 v29, 32, v26
	v_or_b32_e32 v44, v24, v25
	v_or_b32_e32 v24, 32, v30
	.loc	1 140 48
	v_cndmask_b32_e32 v8, v8, v9, vcc
	v_subrev_u32_e32 v11, s23, v10
	v_cmp_le_u32_e32 vcc, s23, v10
	v_mul_hi_u32 v13, v12, v17
	v_or_b32_e32 v39, v33, v25
	v_xor_b32_e32 v24, v24, v29
	v_and_b32_e32 v33, 0xc0, v26
	v_cndmask_b32_e32 v10, v10, v11, vcc
	v_mul_lo_u32 v13, v13, s23
	v_add_u32_e32 v14, 8, v16
	v_or3_b32 v24, v33, v24, v32
	v_or_b32_e32 v45, v1, v34
	v_subrev_u32_e32 v11, s23, v10
	v_cmp_le_u32_e32 vcc, s23, v10
	v_sub_u32_e32 v12, v12, v13
	v_xor_b32_e32 v14, s24, v14
	v_xor_b32_e32 v24, v45, v24
	v_cndmask_b32_e32 v10, v10, v11, vcc
	v_subrev_u32_e32 v13, s23, v12
	v_cmp_le_u32_e32 vcc, s23, v12
	v_mul_hi_u32 v15, v14, v17
	v_or_b32_e32 v46, v24, v25
	v_or_b32_e32 v24, 36, v30
	v_cndmask_b32_e32 v12, v12, v13, vcc
	v_mul_lo_u32 v15, v15, s23
	v_xor_b32_e32 v24, v24, v29
	v_subrev_u32_e32 v13, s23, v12
	v_cmp_le_u32_e32 vcc, s23, v12
	v_sub_u32_e32 v14, v14, v15
	v_xor_b32_e32 v16, s24, v16
	v_or_b32_e32 v24, v33, v24
	v_or_b32_e32 v47, v45, v32
	v_cndmask_b32_e32 v12, v12, v13, vcc
	v_subrev_u32_e32 v15, s23, v14
	v_cmp_le_u32_e32 vcc, s23, v14
	v_mul_hi_u32 v17, v16, v17
	v_xor_b32_e32 v24, v47, v24
	v_cndmask_b32_e32 v14, v14, v15, vcc
	v_mul_lo_u32 v17, v17, s23
	v_or_b32_e32 v48, v24, v25
	v_or_b32_e32 v24, 40, v30
	v_subrev_u32_e32 v15, s23, v14
	v_cmp_le_u32_e32 vcc, s23, v14
	v_sub_u32_e32 v16, v16, v17
	v_xor_b32_e32 v24, v24, v29
	v_cndmask_b32_e32 v14, v14, v15, vcc
	v_subrev_u32_e32 v17, s23, v16
	v_cmp_le_u32_e32 vcc, s23, v16
	v_or3_b32 v24, v33, v24, v32
	v_xor_b32_e32 v24, v45, v24
	v_cndmask_b32_e32 v16, v16, v17, vcc
	v_subrev_u32_e32 v17, s23, v16
	v_cmp_le_u32_e32 vcc, s23, v16
	v_or_b32_e32 v49, v24, v25
	v_or_b32_e32 v24, 44, v30
	v_cndmask_b32_e32 v16, v16, v17, vcc
	v_xor_b32_e32 v24, v24, v29
	v_xor_b32_e32 v2, s24, v2
	v_xor_b32_e32 v4, s24, v4
	v_xor_b32_e32 v6, s24, v6
	v_xor_b32_e32 v8, s24, v8
	v_xor_b32_e32 v10, s24, v10
	v_xor_b32_e32 v12, s24, v12
	v_xor_b32_e32 v14, s24, v14
	v_xor_b32_e32 v16, s24, v16
	v_or_b32_e32 v24, v33, v24
	v_subrev_u32_e32 v2, s24, v2
	v_subrev_u32_e32 v4, s24, v4
	v_subrev_u32_e32 v6, s24, v6
	v_subrev_u32_e32 v8, s24, v8
	v_subrev_u32_e32 v10, s24, v10
	v_subrev_u32_e32 v12, s24, v12
	v_subrev_u32_e32 v14, s24, v14
	v_subrev_u32_e32 v16, s24, v16
	.loc	1 142 48
	v_and_b32_e32 v28, 48, v26
	v_xor_b32_e32 v24, v47, v24
	.loc	1 143 45
	v_mad_u64_u32 v[2:3], s[0:1], v2, s16, v[20:21]
	v_mad_u64_u32 v[4:5], s[0:1], v4, s16, v[20:21]
	v_mad_u64_u32 v[6:7], s[0:1], v6, s16, v[20:21]
	v_mad_u64_u32 v[8:9], s[0:1], v8, s16, v[20:21]
	v_mad_u64_u32 v[10:11], s[0:1], v10, s16, v[20:21]
	v_mad_u64_u32 v[12:13], s[0:1], v12, s16, v[20:21]
	v_mad_u64_u32 v[14:15], s[0:1], v14, s16, v[20:21]
	v_mad_u64_u32 v[16:17], s[0:1], v16, s16, v[20:21]
	.loc	1 142 18
	v_mov_b32_e32 v21, 0
	.loc	1 142 48 is_stmt 0
	v_and_b32_e32 v27, 64, v26
	v_or_b32_e32 v50, v24, v25
	v_or_b32_e32 v24, 64, v28
	.loc	1 142 18
	s_waitcnt lgkmcnt(0)
	v_lshl_add_u64 v[18:19], s[4:5], 0, v[20:21]
	.loc	1 142 48
	v_and_b32_e32 v21, 0x80, v26
	v_xor_b32_e32 v24, v24, v27
	v_or_b32_e32 v24, v21, v24
	v_or3_b32 v24, v24, v32, v34
	v_xad_u32 v51, v24, v1, v25
	v_or_b32_e32 v24, 0x44, v28
	v_xor_b32_e32 v24, v24, v27
	v_or_b32_e32 v24, v24, v21
	v_or_b32_e32 v20, 12, v20
	v_and_b32_e32 v31, 12, v31
	v_xor_b32_e32 v24, v24, v32
	v_xor_b32_e32 v20, v31, v20
	v_or_b32_e32 v24, v24, v34
	v_or_b32_e32 v31, v20, v25
	v_xor_b32_e32 v20, v20, v1
	v_xad_u32 v1, v24, v1, v25
	v_or_b32_e32 v24, 0x48, v28
	v_xor_b32_e32 v24, v24, v27
	v_or3_b32 v24, v21, v24, v32
	v_xor_b32_e32 v24, v45, v24
	v_or_b32_e32 v52, v24, v25
	v_or_b32_e32 v24, 0x4c, v28
	v_xor_b32_e32 v24, v24, v27
	v_or_b32_e32 v24, v24, v21
	v_xor_b32_e32 v24, v47, v24
	v_or_b32_e32 v53, v24, v25
	v_or_b32_e32 v24, 0x60, v30
	v_and_b32_e32 v26, 0x60, v26
	v_xor_b32_e32 v24, v24, v26
	v_or3_b32 v24, v21, v24, v32
	v_xor_b32_e32 v24, v45, v24
	v_or_b32_e32 v54, v24, v25
	v_or_b32_e32 v24, 0x64, v30
	v_xor_b32_e32 v24, v24, v26
	v_or_b32_e32 v24, v24, v21
	v_xor_b32_e32 v24, v47, v24
	v_or_b32_e32 v55, v24, v25
	v_or_b32_e32 v24, 0x68, v30
	v_xor_b32_e32 v24, v24, v26
	v_or3_b32 v24, v21, v24, v32
	v_xor_b32_e32 v24, v45, v24
	v_or_b32_e32 v56, v24, v25
	v_or_b32_e32 v24, 0x6c, v30
	v_xor_b32_e32 v24, v24, v26
	v_or_b32_e32 v21, v24, v21
	v_lshlrev_b32_e32 v0, 2, v0
	v_lshlrev_b32_e32 v24, 8, v23
	s_movk_i32 s0, 0x7c
	v_xor_b32_e32 v21, v47, v21
	v_and_or_b32 v24, v0, s0, v24
	.loc	1 143 18 is_stmt 1
	v_ashrrev_i32_e32 v3, 31, v2
	v_ashrrev_i32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_ashrrev_i32_e32 v13, 31, v12
	v_ashrrev_i32_e32 v15, 31, v14
	v_ashrrev_i32_e32 v17, 31, v16
	v_or_b32_e32 v20, v20, v25
	v_or_b32_e32 v21, v21, v25
	v_xor_b32_e32 v0, 64, v24
	v_xor_b32_e32 v57, 0xc0, v24
	v_lshl_add_u64 v[2:3], s[6:7], 0, v[2:3]
	v_lshl_add_u64 v[4:5], s[6:7], 0, v[4:5]
	v_lshl_add_u64 v[6:7], s[6:7], 0, v[6:7]
	v_lshl_add_u64 v[8:9], s[6:7], 0, v[8:9]
	v_lshl_add_u64 v[10:11], s[6:7], 0, v[10:11]
	v_lshl_add_u64 v[12:13], s[6:7], 0, v[12:13]
	v_lshl_add_u64 v[14:15], s[6:7], 0, v[14:15]
	v_lshl_add_u64 v[16:17], s[6:7], 0, v[16:17]
	s_mov_b64 s[0:1], 0
	v_accvgpr_write_b32 a7, 0
	v_accvgpr_write_b32 a6, 0
	v_accvgpr_write_b32 a5, 0
	v_accvgpr_write_b32 a4, 0
	v_accvgpr_write_b32 a3, 0
	v_accvgpr_write_b32 a2, 0
	v_accvgpr_write_b32 a1, 0
	v_accvgpr_write_b32 a0, 0
	v_add_u32_e32 v25, 0, v36
	v_add_u32_e32 v26, 0, v38
	v_add_u32_e32 v27, 0, v39
	v_add_u32_e32 v28, 0, v31
	v_add_u32_e32 v29, 0, v41
	v_add_u32_e32 v30, 0, v42
	v_add_u32_e32 v31, 0, v43
	v_add_u32_e32 v32, 0, v40
	v_add_u32_e32 v33, 0, v35
	v_add_u32_e32 v34, 0, v37
	v_add_u32_e32 v35, 0, v44
	v_add_u32_e32 v36, 0, v20
	v_add_u32_e32 v37, 0, v46
	v_add_u32_e32 v38, 0, v48
	v_add_u32_e32 v39, 0, v49
	v_add_u32_e32 v40, 0, v50
	v_add_u32_e32 v41, 0, v51
	v_add_u32_e32 v42, 0, v1
	v_add_u32_e32 v43, 0, v52
	v_add_u32_e32 v44, 0, v53
	v_add_u32_e32 v45, 0, v54
	v_add_u32_e32 v46, 0, v55
	v_add_u32_e32 v47, 0, v56
	v_add_u32_e32 v48, 0, v21
	v_add_u32_e32 v49, 0, v0
	v_add_u32_e32 v50, 0, v57
.LBB0_2:
	.loc	1 157 20
	v_lshl_add_u64 v[100:101], v[18:19], 0, s[0:1]
	v_lshl_add_u64 v[0:1], v[2:3], 0, s[0:1]
	v_lshl_add_u64 v[20:21], v[4:5], 0, s[0:1]
	v_lshl_add_u64 v[88:89], v[6:7], 0, s[0:1]
	v_lshl_add_u64 v[90:91], v[8:9], 0, s[0:1]
	v_lshl_add_u64 v[92:93], v[10:11], 0, s[0:1]
	v_lshl_add_u64 v[94:95], v[12:13], 0, s[0:1]
	v_lshl_add_u64 v[96:97], v[14:15], 0, s[0:1]
	v_lshl_add_u64 v[98:99], v[16:17], 0, s[0:1]
	.loc	1 156 20
	global_load_dwordx4 v[52:55], v[100:101], off
	.loc	1 157 20
	global_load_dwordx4 v[56:59], v[98:99], off
	global_load_dwordx4 v[60:63], v[96:97], off
	global_load_dwordx4 v[64:67], v[94:95], off
	global_load_dwordx4 v[68:71], v[92:93], off
	global_load_dwordx4 v[72:75], v[90:91], off
	global_load_dwordx4 v[76:79], v[88:89], off
	global_load_dwordx4 v[80:83], v[20:21], off
	global_load_dwordx4 v[84:87], v[0:1], off
	v_add_u32_e32 v51, 0, v24
	.loc	1 156 20
	s_barrier
	.loc	1 153 22
	s_add_i32 s15, s15, 1
	s_add_u32 s0, s0, 0x100
	s_addc_u32 s1, s1, 0
	s_cmp_lt_i32 s15, s22
	.loc	1 156 20
	s_waitcnt vmcnt(8)
	ds_write_b32 v25, v52
	ds_write_b32 v26, v53
	ds_write_b32 v27, v54
	ds_write_b32 v25, v52 offset:2048
	ds_write_b32 v26, v53 offset:2048
	ds_write_b32 v27, v54 offset:2048
	ds_write2st64_b32 v28, v55, v55 offset1:8
	s_waitcnt lgkmcnt(0)
	s_barrier
	ds_read2st64_b32 v[52:53], v29 offset1:8
	ds_read2st64_b32 v[54:55], v30 offset1:8
	ds_read2st64_b32 v[20:21], v31 offset1:8
	ds_read2st64_b32 v[0:1], v32 offset1:8
	.loc	1 157 20
	s_waitcnt lgkmcnt(0)
	s_barrier
	s_waitcnt vmcnt(7)
	ds_write_b32 v33, v56
	ds_write_b32 v34, v57
	ds_write_b32 v35, v58
	ds_write_b32 v36, v59
	s_waitcnt vmcnt(6)
	ds_write_b32 v37, v60 offset:2048
	ds_write_b32 v38, v61 offset:2048
	ds_write_b32 v39, v62 offset:2048
	ds_write_b32 v40, v63 offset:2048
	s_waitcnt vmcnt(5)
	ds_write_b32 v41, v64 offset:4096
	ds_write_b32 v42, v65 offset:4096
	ds_write_b32 v43, v66 offset:4096
	ds_write_b32 v44, v67 offset:4096
	s_waitcnt vmcnt(4)
	ds_write_b32 v45, v68 offset:6144
	ds_write_b32 v46, v69 offset:6144
	ds_write_b32 v47, v70 offset:6144
	ds_write_b32 v48, v71 offset:6144
	s_waitcnt vmcnt(3)
	ds_write_b32 v33, v72 offset:8192
	ds_write_b32 v34, v73 offset:8192
	ds_write_b32 v35, v74 offset:8192
	ds_write_b32 v36, v75 offset:8192
	s_waitcnt vmcnt(2)
	ds_write_b32 v37, v76 offset:10240
	ds_write_b32 v38, v77 offset:10240
	ds_write_b32 v39, v78 offset:10240
	ds_write_b32 v40, v79 offset:10240
	s_waitcnt vmcnt(1)
	ds_write_b32 v41, v80 offset:12288
	ds_write_b32 v42, v81 offset:12288
	ds_write_b32 v43, v82 offset:12288
	ds_write_b32 v44, v83 offset:12288
	s_waitcnt vmcnt(0)
	ds_write_b32 v45, v84 offset:14336
	ds_write_b32 v46, v85 offset:14336
	ds_write_b32 v47, v86 offset:14336
	ds_write_b32 v48, v87 offset:14336
	s_waitcnt lgkmcnt(0)
	s_barrier
	ds_read2_b32 v[56:57], v51 offset1:32
	.loc	1 159 33
	s_waitcnt lgkmcnt(0)
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4
	.loc	1 157 20
	ds_read_b32 v51, v49
	.loc	1 159 33
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:1
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:1
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:2
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:2
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:3
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:3
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:4
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:5
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:5
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:6
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:6
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:7
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:7
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:8
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:8
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:9
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:9
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:10
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:10
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:11
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:11
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:12
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:12
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:13
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:13
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:14
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:14
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v52, v56, a[0:3] cbsz:4 abid:15
	.loc	1 157 20
	ds_read_b32 v52, v50
	.loc	1 159 33
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v53, v56, a[4:7] cbsz:4 abid:15
	s_waitcnt lgkmcnt(1)
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:1
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:1
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:2
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:2
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:3
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:3
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:4
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:5
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:5
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:6
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:6
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:7
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:7
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:8
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:8
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:9
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:9
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:10
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:10
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:11
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:11
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:12
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:12
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:13
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:13
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:14
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:14
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v54, v51, a[0:3] cbsz:4 abid:15
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v55, v51, a[4:7] cbsz:4 abid:15
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:1
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:1
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:2
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:2
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:3
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:3
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:4
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:5
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:5
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:6
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:6
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:7
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:7
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:8
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:8
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:9
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:9
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:10
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:10
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:11
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:11
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:12
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:12
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:13
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:13
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:14
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:14
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v20, v57, a[0:3] cbsz:4 abid:15
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v21, v57, a[4:7] cbsz:4 abid:15
	s_waitcnt lgkmcnt(0)
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:1
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:1
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:2
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:2
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:3
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:3
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:4
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:4
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:5
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:5
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:6
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:6
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:7
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:7
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:8
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:8
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:9
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:9
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:10
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:10
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:11
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:11
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:12
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:12
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:13
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:13
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:14
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:14
	s_nop 0
	v_mfma_i32_4x4x4_16b_i8 a[0:3], v0, v52, a[0:3] cbsz:4 abid:15
	v_mfma_i32_4x4x4_16b_i8 a[4:7], v1, v52, a[4:7] cbsz:4 abid:15
	.loc	1 153 22
	s_cbranch_scc1 .LBB0_2
	.loc	1 0 0 is_stmt 0
	s_nop 2
	v_accvgpr_read_b32 v0, a0
	v_accvgpr_read_b32 v1, a1
	v_accvgpr_read_b32 v20, a2
	v_accvgpr_read_b32 v21, a3
	v_accvgpr_read_b32 v51, a4
	v_accvgpr_read_b32 v52, a5
	v_accvgpr_read_b32 v53, a6
	v_accvgpr_read_b32 v54, a7
	.loc	1 184 32 is_stmt 1
	v_cvt_f32_i32_e32 v12, v1
	v_cvt_f32_i32_e32 v11, v20
	v_cvt_f32_i32_e32 v10, v21
	v_cvt_f32_i32_e32 v9, v51
	v_cvt_f32_i32_e32 v8, v52
	v_cvt_f32_i32_e32 v7, v53
	v_cvt_f32_i32_e32 v6, v54
	v_cvt_f32_i32_e32 v13, v0
.LBB0_4:
	.loc	1 138 27
	v_or_b32_e32 v0, s21, v23
	.loc	1 183 55
	v_cmp_gt_i32_e32 vcc, s14, v0
	v_mov_b32_e32 v3, 0
	v_ashrrev_i32_e32 v1, 31, v0
	v_mov_b32_e32 v14, 0
	.loc	1 183 24 is_stmt 0
	s_and_saveexec_b64 s[0:1], vcc
	s_cbranch_execz .LBB0_6
	.loc	1 123 24 is_stmt 1
	v_mov_b32_e32 v4, s12
	v_mov_b32_e32 v5, s13
	.loc	1 181 37
	v_lshl_add_u64 v[4:5], v[0:1], 1, v[4:5]
	.loc	1 183 24
	global_load_ushort v14, v[4:5], off nt
.LBB0_6:
	.loc	1 0 24 is_stmt 0
	s_or_b64 exec, exec, s[0:1]
	.loc	1 130 33 is_stmt 1
	s_mul_i32 s2, s2, s20
	s_sub_i32 s0, s18, s2
	s_sub_i32 s1, s0, s20
	s_cmp_ge_u32 s0, s20
	s_cselect_b32 s0, s1, s0
	s_sub_i32 s1, s0, s20
	s_cmp_ge_u32 s0, s20
	s_cselect_b32 s0, s1, s0
	s_xor_b32 s0, s0, s3
	s_sub_i32 s0, s0, s3
	.loc	1 130 27 is_stmt 0
	s_add_i32 s0, s0, s19
	.loc	1 178 32 is_stmt 1
	v_lshl_or_b32 v2, s0, 4, v22
	.loc	1 182 55
	v_cmp_gt_i32_e64 s[2:3], 1, v2
	v_cmp_gt_i32_e64 s[0:1], 0, v2
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v21, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v20, 0
	.loc	1 182 24 is_stmt 0
	s_waitcnt lgkmcnt(0)
	s_and_saveexec_b64 s[4:5], s[2:3]
	s_cbranch_execz .LBB0_10
	.loc	1 123 24 is_stmt 1
	v_mov_b32_e32 v4, s10
	v_mov_b32_e32 v5, s11
	.loc	1 180 37
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshl_add_u64 v[4:5], v[2:3], 1, v[4:5]
	.loc	1 182 24
	global_load_ushort v21, v[4:5], off
	v_mov_b32_e32 v20, 0
	v_mov_b32_e32 v15, 0
	v_mov_b32_e32 v19, 0
	v_mov_b32_e32 v18, 0
	v_mov_b32_e32 v17, 0
	v_mov_b32_e32 v16, 0
	v_mov_b32_e32 v3, 0
	s_and_saveexec_b64 s[6:7], s[0:1]
	s_cbranch_execz .LBB0_9
	global_load_dwordx2 v[22:23], v[4:5], off offset:16
	global_load_dword v3, v[4:5], off offset:2
	global_load_ushort v15, v[4:5], off offset:6
	.loc	1 182 93 is_stmt 0
	s_waitcnt vmcnt(2)
	v_cvt_f32_f16_e32 v16, v22
	s_waitcnt vmcnt(1)
	v_cvt_f32_f16_e32 v18, v3
	v_cvt_f32_f16_sdwa v17, v3 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	s_waitcnt vmcnt(0)
	v_cvt_f32_f16_e32 v19, v15
	v_cvt_f32_f16_sdwa v15, v22 dst_sel:DWORD dst_unused:UNUSED_PAD src0_sel:WORD_1
	v_cvt_f32_f16_e32 v3, v23
	.loc	1 182 24
	v_lshrrev_b32_e32 v20, 16, v23
.LBB0_9:
	.loc	1 0 24
	s_or_b64 exec, exec, s[6:7]
.LBB0_10:
	s_or_b64 exec, exec, s[4:5]
	.loc	1 183 93 is_stmt 1
	s_waitcnt vmcnt(0)
	v_cvt_f32_f16_e32 v4, v14
	.loc	1 189 39
	s_and_b64 s[4:5], s[2:3], vcc
	.loc	1 191 21
	s_and_saveexec_b64 s[2:3], s[4:5]
	s_cbranch_execnz .LBB0_13
	.loc	1 0 21 is_stmt 0
	s_or_b64 exec, exec, s[2:3]
	.loc	1 189 39 is_stmt 1
	s_and_b64 s[0:1], s[0:1], vcc
	.loc	1 191 21
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execnz .LBB0_14
.LBB0_12:
	.loc	1 191 4 is_stmt 0
	s_endpgm
.LBB0_13:
	.loc	1 182 93 is_stmt 1
	v_cvt_f32_f16_e32 v5, v21
	.loc	1 190 29
	v_mul_lo_u32 v22, v2, s17
	.loc	1 190 17 is_stmt 0
	v_ashrrev_i32_e32 v23, 31, v22
	v_lshl_add_u64 v[22:23], v[22:23], 1, s[8:9]
	.loc	1 184 32 is_stmt 1
	v_mul_f32_e32 v5, v13, v5
	.loc	1 186 23
	v_fma_mixlo_f16 v5, v5, v4, 0
	.loc	1 190 48
	v_lshl_add_u64 v[22:23], v[0:1], 1, v[22:23]
	.loc	1 191 21
	global_store_short v[22:23], v5, off
	s_or_b64 exec, exec, s[2:3]
	.loc	1 189 39
	s_and_b64 s[0:1], s[0:1], vcc
	.loc	1 191 21
	s_and_saveexec_b64 s[2:3], s[0:1]
	s_cbranch_execz .LBB0_12
.LBB0_14:
	.loc	1 182 93
	v_cvt_f32_f16_e32 v5, v20
	.loc	1 178 32
	v_or_b32_e32 v2, 1, v2
	.loc	1 184 32
	v_mul_f32_e32 v12, v18, v12
	v_mul_f32_e32 v11, v17, v11
	v_mul_f32_e32 v10, v19, v10
	v_mul_f32_e32 v9, v16, v9
	v_mul_f32_e32 v8, v15, v8
	v_mul_f32_e32 v3, v3, v7
	v_mul_f32_e32 v5, v6, v5
	.loc	1 190 29
	v_mul_lo_u32 v2, v2, s17
	.loc	1 186 23
	v_fma_mixlo_f16 v16, v12, v4, 0
	v_fma_mixlo_f16 v17, v11, v4, 0
	v_fma_mixlo_f16 v18, v10, v4, 0
	v_fma_mixlo_f16 v19, v9, v4, 0
	v_fma_mixlo_f16 v20, v8, v4, 0
	v_fma_mixlo_f16 v21, v3, v4, 0
	v_fma_mixlo_f16 v22, v5, v4, 0
	.loc	1 190 29
	v_add_u32_e32 v4, s17, v2
	v_add_u32_e32 v6, s17, v4
	v_mad_u64_u32 v[8:9], s[0:1], s17, 5, v[6:7]
	v_add_u32_e32 v10, s17, v8
	v_add_u32_e32 v12, s17, v10
	v_add_u32_e32 v14, s17, v12
	.loc	1 190 17 is_stmt 0
	v_ashrrev_i32_e32 v3, 31, v2
	v_lshl_add_u64 v[2:3], v[2:3], 1, s[8:9]
	v_ashrrev_i32_e32 v5, 31, v4
	v_ashrrev_i32_e32 v7, 31, v6
	v_ashrrev_i32_e32 v9, 31, v8
	v_ashrrev_i32_e32 v11, 31, v10
	v_ashrrev_i32_e32 v13, 31, v12
	v_ashrrev_i32_e32 v15, 31, v14
	.loc	1 190 48
	v_lshlrev_b64 v[0:1], 1, v[0:1]
	.loc	1 190 17
	v_lshl_add_u64 v[4:5], v[4:5], 1, s[8:9]
	v_lshl_add_u64 v[6:7], v[6:7], 1, s[8:9]
	v_lshl_add_u64 v[8:9], v[8:9], 1, s[8:9]
	v_lshl_add_u64 v[10:11], v[10:11], 1, s[8:9]
	v_lshl_add_u64 v[12:13], v[12:13], 1, s[8:9]
	v_lshl_add_u64 v[14:15], v[14:15], 1, s[8:9]
	.loc	1 190 48
	v_lshl_add_u64 v[2:3], v[2:3], 0, v[0:1]
	v_lshl_add_u64 v[4:5], v[4:5], 0, v[0:1]
	v_lshl_add_u64 v[6:7], v[6:7], 0, v[0:1]
	v_lshl_add_u64 v[8:9], v[8:9], 0, v[0:1]
	v_lshl_add_u64 v[10:11], v[10:11], 0, v[0:1]
	v_lshl_add_u64 v[12:13], v[12:13], 0, v[0:1]
	v_lshl_add_u64 v[0:1], v[14:15], 0, v[0:1]
	.loc	1 191 21 is_stmt 1
	global_store_short v[2:3], v16, off
	global_store_short v[4:5], v17, off
	global_store_short v[6:7], v18, off
	global_store_short v[8:9], v19, off
	global_store_short v[10:11], v20, off
	global_store_short v[12:13], v21, off
	global_store_short v[0:1], v22, off
	.loc	1 191 4 is_stmt 0
	s_endpgm
.Ltmp10:
	.section	.rodata,"a",@progbits
	.p2align	6, 0x0
	.amdhsa_kernel _triton_gemm_a8w8_kernel
		.amdhsa_group_segment_fixed_size 0
		.amdhsa_private_segment_fixed_size 0
		.amdhsa_kernarg_size 60
		.amdhsa_user_sgpr_count 2
		.amdhsa_user_sgpr_dispatch_ptr 0
		.amdhsa_user_sgpr_queue_ptr 0
		.amdhsa_user_sgpr_kernarg_segment_ptr 1
		.amdhsa_user_sgpr_dispatch_id 0
		.amdhsa_user_sgpr_kernarg_preload_length 0
		.amdhsa_user_sgpr_kernarg_preload_offset 0
		.amdhsa_user_sgpr_private_segment_size 0
		.amdhsa_enable_private_segment 0
		.amdhsa_system_sgpr_workgroup_id_x 1
		.amdhsa_system_sgpr_workgroup_id_y 0
		.amdhsa_system_sgpr_workgroup_id_z 0
		.amdhsa_system_sgpr_workgroup_info 0
		.amdhsa_system_vgpr_workitem_id 0
		.amdhsa_next_free_vgpr 112
		.amdhsa_next_free_sgpr 25
		.amdhsa_accum_offset 104
		.amdhsa_reserve_vcc 1
		.amdhsa_reserve_xnack_mask 1
		.amdhsa_float_round_mode_32 0
		.amdhsa_float_round_mode_16_64 0
		.amdhsa_float_denorm_mode_32 3
		.amdhsa_float_denorm_mode_16_64 3
		.amdhsa_dx10_clamp 1
		.amdhsa_ieee_mode 1
		.amdhsa_fp16_overflow 0
		.amdhsa_tg_split 0
		.amdhsa_exception_fp_ieee_invalid_op 0
		.amdhsa_exception_fp_denorm_src 0
		.amdhsa_exception_fp_ieee_div_zero 0
		.amdhsa_exception_fp_ieee_overflow 0
		.amdhsa_exception_fp_ieee_underflow 0
		.amdhsa_exception_fp_ieee_inexact 0
		.amdhsa_exception_int_div_zero 0
	.end_amdhsa_kernel
	.text
.Lfunc_end0:
	.size	_triton_gemm_a8w8_kernel, .Lfunc_end0-_triton_gemm_a8w8_kernel
	.cfi_endproc

	.p2alignl 6, 3212836864
	.fill 256, 4, 3212836864
	.section	.debug_abbrev,"",@progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	0
	.byte	0
	.byte	2
	.byte	46
	.byte	0
	.byte	3
	.byte	14
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	3
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	4
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	5
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0
.Ldebug_info_start0:
	.short	4
	.long	.debug_abbrev
	.byte	8
	.byte	1
	.long	.Linfo_string0
	.short	2
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.byte	2
	.long	.Linfo_string3
	.byte	1
	.byte	3
	.quad	.Lfunc_begin0
	.long	.Lfunc_end0-.Lfunc_begin0
	.long	42
	.byte	4
	.long	42
	.quad	.Ltmp0
	.long	.Ltmp1-.Ltmp0
	.byte	1
	.byte	125
	.byte	27
	.byte	5
	.long	42
	.long	.Ldebug_ranges0
	.byte	1
	.byte	149
	.byte	24
	.byte	0
	.byte	0
.Ldebug_info_end0:
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp2-.Lfunc_begin0
	.quad	.Ltmp3-.Lfunc_begin0
	.quad	.Ltmp4-.Lfunc_begin0
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp6-.Lfunc_begin0
	.quad	.Ltmp7-.Lfunc_begin0
	.quad	.Ltmp8-.Lfunc_begin0
	.quad	.Ltmp9-.Lfunc_begin0
	.quad	0
	.quad	0
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"triton"
.Linfo_string1:
	.asciz	"_test_a8w8_7.py"
.Linfo_string2:
	.asciz	"/workspace/projects/triton-openai/python/test"
.Linfo_string3:
	.asciz	"_triton_gemm_a8w8_kernel"
	.section	".note.GNU-stack","",@progbits
	.amdgpu_metadata
---
amdhsa.kernels:
  - .agpr_count:     8
    .args:
      - .address_space:  global
        .offset:         0
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         8
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         16
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         24
        .size:           8
        .value_kind:     global_buffer
      - .address_space:  global
        .offset:         32
        .size:           8
        .value_kind:     global_buffer
      - .offset:         40
        .size:           4
        .value_kind:     by_value
      - .offset:         44
        .size:           4
        .value_kind:     by_value
      - .offset:         48
        .size:           4
        .value_kind:     by_value
      - .offset:         52
        .size:           4
        .value_kind:     by_value
      - .offset:         56
        .size:           4
        .value_kind:     by_value
    .group_segment_fixed_size: 0
    .kernarg_segment_align: 8
    .kernarg_segment_size: 60
    .max_flat_workgroup_size: 128
    .name:           _triton_gemm_a8w8_kernel
    .private_segment_fixed_size: 0
    .sgpr_count:     31
    .sgpr_spill_count: 0
    .symbol:         _triton_gemm_a8w8_kernel.kd
    .vgpr_count:     112
    .vgpr_spill_count: 0
    .wavefront_size: 64
amdhsa.target:   amdgcn-amd-amdhsa--gfx942
amdhsa.version:
  - 1
  - 1
...

	.end_amdgpu_metadata
	.section	.debug_line,"",@progbits
.Lline_table_start0:
